# Урок 2. Циклы. Рекурсия. Функции.
# 1. Написать программу, которая будет складывать, вычитать, умножать или делить два числа.
# Числа и знак операции вводятся пользователем. После выполнения вычисления программа не должна завершаться,
# а должна запрашивать новые данные для вычислений. Завершение программы должно выполняться
# при вводе символа '0' в качестве знака операции. Если пользователь вводит неверный знак (не '0', '+', '-', '*', '/'),
# то программа должна сообщать ему об ошибке и снова запрашивать знак операции.
# Также сообщать пользователю о невозможности деления на ноль, если он ввел 0 в качестве делителя.

while True:
    a = int(input("Введите первое число:"))
    b = input("Введите знак операции (0 - программа закроется, +, -, *, /):")
    if b == "0": break
    if b in ("+", "-", "*", "/", "0"):
        d = int(input("Введите второе число:"))
        if b == '+':
                print("%d + %d = %.2f" % (a, d, a + d))
        elif b == '-':
                print("%d - %d = %.2f" % (a, d, a - d))
        elif b == '*':
                print("%d * %d = %.2f" % (a, d, a * d))
        elif b == '/':
            if d != 0:
                print("%d / %d = %.2f" % (a, d, a / d))
            else:
                print("Деление на ноль!")
    else:
        print("Неверный знак операции!")

# 2. Посчитать четные и нечетные цифры введенного натурального числа. Например, если введено число 34560,
# то у него 3 четные цифры (4, 6 и 0) и 2 нечетные (3 и 5).

a = input("Введите число:")
chet = 0
nechet = 0
for i in a:
    if int(i) % 2 == 0:
        chet += 1
    else:
        nechet += 1
print("Четных: %d, нечетных: %d" % (chet, nechet))

# 3. Сформировать из введенного числа обратное по порядку входящих в него цифр и вывести на экран.
# Например, если введено число 3486, то надо вывести число 6843.

a = input("Введите число:")
print(a[::-1])

# 4. Найти сумму n элементов следующего ряда чисел: 1 -0.5 0.25 -0.125 ...Количество элементов (n) вводится с клавиатуры.

n = int(input("Введите число:"))
a = 1
b = 0
for i in range(n):
    b += a
    a /= -2
print(b)

# 5. Вывести на экран коды и символы таблицы ASCII, начиная с символа под номером 32 и заканчивая 127-м включительно.
# Вывод выполнить в табличной форме: по десять пар "код-символ" в каждой строке.

for i in range(32, 128):
    print("%6d = %s" % (i, chr(i)), end='')
    if i % 10 == 0:
        print()
print()

# 6. В программе генерируется случайное целое число от 0 до 100. Пользователь должен его отгадать не более чем
# за 10 попыток. После каждой неудачной попытки должно сообщаться больше или меньше введенное пользователем число,
# чем то, что загадано. Если за 10 попыток число не отгадано, то вывести загаданное число.

import random
sgenerirovano = random.randint(0, 100)
for i in range(11):
    if i == 10:
        print("Все ваши попытки исчерпаны. Сгенерированное число: %d" % (sgenerirovano))
        break
    else:
        a = int(input("У вас попыток %d. Угадайте загаданное число:" % (10 - i)))
        if a == sgenerirovano:
            print("Вы угадали")
            break
        elif a > sgenerirovano:
            print("Сгенерированное число меньше предполагаемого вами")
        else:
            print("Сгенерированное число больше предполагаемого вами")


# 7. Напишите программу, доказывающую или проверяющую, что для множества натуральных чисел выполняется
# равенство: 1+2+...+n = n(n+1)/2, где n - любое натуральное число.

n = int(input("Введите число:"))
sum_i = 0
for i in range(n + 1):
    sum_i += i
print(sum_i, "=", n * (n + 1) / 2)

# 8. Посчитать, сколько раз встречается определенная цифра в введенной последовательности чисел.
# Количество вводимых чисел и цифра, которую необходимо посчитать, задаются вводом с клавиатуры.

a = input("Введите число:")
find = int(input("Введите цифру, которую надо искать в введенном числе:"))
count_find = 0
for i in a:
    if find == int(i):
        count_find += 1
print(count_find)

# 9. Среди натуральных чисел, которые были введены, найти наибольшее по сумме цифр.
# Вывести на экран это число и сумму его цифр.

a = input("Введите число, если 0 прекращаем подсчет:")
max_sum = 0
max_a = 0
while a != "0":
    s = 0
    for i in a:
        s += int(i)
    if s > max_sum:
        max_sum = s
        max_a = int(a)
    print(s)
    a = input("Введите число, если 0 прекращаем подсчет:")
    m = a
print(max_sum, max_a)
